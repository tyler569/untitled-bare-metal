// This file is autogenerated by './gen.rb'. Do not edit.

#pragma once

#include "kern/cap.h"
#include "sys/syscall.h"

message_info_t CNode_Copy (cte_t *slot, word_t dest_index, uint8_t dest_depth,
                           cte_t *src_root, word_t src_index,
                           uint8_t src_depth, cap_rights_t rights);
message_info_t CNode_Delete (cte_t *slot, word_t index, uint8_t depth);
message_info_t CNode_Mint (cte_t *slot, word_t dest_index, uint8_t dest_depth,
                           cte_t *src_root, word_t src_index,
                           uint8_t src_depth, cap_rights_t rights,
                           word_t badge);
message_info_t CNode_Revoke (cte_t *slot, word_t index, uint8_t depth);
message_info_t CNode_DebugPrint (cte_t *slot);
message_info_t TCB_Configure (cte_t *slot, word_t fault_ep, cte_t *cspace_root,
                              word_t cspace_root_data, cte_t *vspace_root,
                              word_t vspace_root_data, word_t buffer,
                              cte_t *buffer_frame);
message_info_t TCB_CopyRegisters (cte_t *slot, cte_t *source,
                                  bool suspend_source, bool resume_target,
                                  bool transfer_frame, bool transfer_integer,
                                  word_t arch_flags);
message_info_t TCB_ReadRegisters (cte_t *slot, bool suspend_source,
                                  word_t arch_flags, word_t count,
                                  user_context_t *regs);
message_info_t TCB_Resume (cte_t *slot);
message_info_t TCB_BindNotification (cte_t *slot, cte_t *notification);
message_info_t TCB_SetAffinity (cte_t *slot, word_t affinity);
message_info_t TCB_SetIPCBuffer (cte_t *slot, word_t buffer,
                                 cte_t *buffer_frame);
message_info_t TCB_SetSpace (cte_t *slot, word_t fault_ep, cte_t *cspace_root,
                             word_t cspace_root_data, cte_t *vspace_root,
                             word_t vspace_root_data);
message_info_t TCB_SetTLSBase (cte_t *slot, word_t tls_base);
message_info_t TCB_Suspend (cte_t *slot);
message_info_t TCB_WriteRegisters (cte_t *slot, bool resume_target,
                                   word_t arch_flags, word_t count,
                                   user_context_t *regs);
message_info_t Untyped_Retype (cte_t *slot, word_t type, word_t size_bits,
                               cte_t *root, word_t node_index,
                               uint8_t node_depth, word_t node_offset,
                               word_t num_objects);
message_info_t X86_IOPort_In8 (cte_t *slot, word_t port);
message_info_t X86_IOPort_In16 (cte_t *slot, word_t port);
message_info_t X86_IOPort_In32 (cte_t *slot, word_t port);
message_info_t X86_IOPort_Out8 (cte_t *slot, word_t port, word_t value);
message_info_t X86_IOPort_Out16 (cte_t *slot, word_t port, word_t value);
message_info_t X86_IOPort_Out32 (cte_t *slot, word_t port, word_t value);
message_info_t X86_IOPortControl_Issue (cte_t *slot, word_t first_port,
                                        word_t last_port, cte_t *root,
                                        word_t index, uint8_t depth);
message_info_t X86_64_PDPT_Map (cte_t *slot, cte_t *vspace, word_t vaddr,
                                X86_VMAttributes_t attr);
message_info_t X86_64_PDPT_Unmap (cte_t *slot);
message_info_t X86_PD_Map (cte_t *slot, cte_t *vspace, word_t vaddr,
                           X86_VMAttributes_t attr);
message_info_t X86_PD_Unmap (cte_t *slot);
message_info_t X86_PT_Map (cte_t *slot, cte_t *vspace, word_t vaddr,
                           X86_VMAttributes_t attr);
message_info_t X86_PT_Unmap (cte_t *slot);
message_info_t X86_Page_Map (cte_t *slot, cte_t *vspace, word_t vaddr,
                             X86_VMAttributes_t attr);
message_info_t X86_Page_Unmap (cte_t *slot);
message_info_t IRQControl_get (cte_t *slot, word_t irq, cte_t *root,
                               word_t index, uint8_t depth);
message_info_t IRQHandler_Ack (cte_t *slot);
message_info_t IRQHandler_Clear (cte_t *slot);
message_info_t IRQHandler_SetNotification (cte_t *slot, cte_t *notification);
